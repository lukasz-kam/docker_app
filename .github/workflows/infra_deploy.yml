name: Terraform infra deployment
on:
  workflow_dispatch:
  push:
    branches:
      - feature/infra-pipeline
    paths:
      - 'infra/**'
  pull_request:
    branches:
      - main
    paths:
      - 'infra/**'

env:
  TF_VAR_aws_region: eu-central-1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform_actions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TF_VAR_aws_region }}
          role-to-assume: arn:aws:iam::038462790533:role/TerraformRole
          role-session-name: GitHubActionsSession
          role-skip-session-tagging: true

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Cache lint plugin directory
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Init TFLint
        run: tflint --init
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        run: tflint -f compact

      - name: tfsec
        uses: tfsec/tfsec-sarif-action@main
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: tfsec.sarif

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=plan.tfplan
        continue-on-error: true

      - name: Terraform Apply
        if: |
          github.ref == 'refs/heads/feature/infra-pipeline' && steps.plan.outcome == 'success' &&
          (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -auto-approve plan.tfplan
